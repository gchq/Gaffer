name: Create Hotfix Branch

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Hotfix Branch Version'
        required: false

env:
  artifactId: gaffer2
  MAVEN_OPTS: -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25

jobs:
  create-hotfix-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout master
      uses: actions/checkout@v4
      with:
        ref: master
        token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set version from input
      if: ${{ github.event.inputs.version }}
      run: echo "RELEASE_VERSION=$(echo ${{ github.event.inputs.version }} | sed 's/^v//')" >> $GITHUB_ENV

    - name: Get latest tag
      if: ${{ !github.event.inputs.version }}
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag

    - name: Format latest tag
      if: ${{ !github.event.inputs.version }}
      run: echo "CURRENT_VERSION=$(echo ${{ steps.get-latest-tag.outputs.tag }} | sed 's/^gaffer2-//')" >> $GITHUB_ENV

    - name: Bump latest tag variable version
      if: ${{ !github.event.inputs.version }}
      run: echo "RELEASE_VERSION=$(echo ${{ env.CURRENT_VERSION }} | sed -r 's/([0-9]+)\.([0-9]+)\.([0-9]+)/echo \1.\2.$((\3+1))/' | sh)" >> $GITHUB_ENV

    - name: Verify version regex
      run: echo ${{ env.RELEASE_VERSION }} | grep -E '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

    - name: Set hotfix branch
      run: echo "BRANCH_NAME=$(echo hotfix/${{ env.RELEASE_VERSION }} )" >> $GITHUB_ENV

    - name: Set up Github credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

    - name: Update versions
      run: |
        mvn versions:set-property -Dproperty=revision -DnewVersion=${RELEASE_VERSION} -DgenerateBackupPoms=false
        sed -i'' -e "s/^gaffer.version=.*/gaffer.version=$RELEASE_VERSION/" rest-api/common-rest/src/main/resources/version.properties

    - name: Push to hotfix branch
      run: |
        git checkout -b $BRANCH_NAME
        git commit -a -m "prepare release $artifactId-$RELEASE_VERSION"
        git push --set-upstream origin $BRANCH_NAME
